import numpy as np
import matplotlib.pyplot as plt

## Adversarial Data Generated by float Model
# Data
categories = [
    'float\n param float', '', 
    'quant\n param float', '', 
    'transaxx\n param float', '', 
    'float\n param quant', '', 
    'quant\n param quant', '', 
    'transaxx\n param quant', '', 
    'float\n param transaxx', '', 
    'quant\n param transaxx', '', 
    'transaxx\n param transaxx', ''
]
adv_acc = [0.0000, 0, 0.0000, 0, 0.0000, 0, 0.1768, 0, 0.1754, 0, 0.1725, 0, 0.1109, 0, 0.1117, 0, 0.4836, 0]
reg_acc = [0.8590, 0, 0.8588, 0, 0.8570, 0, 0.8558, 0, 0.8560, 0, 0.8526, 0, 0.1121, 0, 0.1125, 0, 0.5130, 0]
# Positions
bar_width = 0.4
gap = 0.2  # Space between pairs
positions = np.arange(len(categories) // 2) * (2 * bar_width + gap)

# Adjust positions for the two bars in each pair
positions_1 = positions
positions_2 = positions + bar_width

# Plot
plt.figure(1, figsize=(12, 6))
plt.bar(positions_1, adv_acc[::2], width=bar_width, label='Adversarial Data', color='orange')
plt.bar(positions_2, reg_acc[::2], width=bar_width, label='Standard Data', color='#3455eb')

# Formatting
plt.xticks(positions + bar_width / 2, categories[::2], rotation=45, ha='right')  # Use midpoints and labels for each pair
plt.xlabel('Execution Type')
plt.ylabel('Test Accuracy')
plt.title('Adversarial Accuracy of Different Models with PGD (ε = 0.015) - Adversarial Data Generated by float Model')
plt.legend()
plt.tight_layout()
plt.show(block=False)




## Adversarial Data Generated by quant Model
# Data
categories = [
    'float\n param float', '', 
    'quant\n param float', '', 
    'transaxx\n param float', '', 
    'float\n param quant', '', 
    'quant\n param quant', '', 
    'transaxx\n param quant', '', 
    'float\n param transaxx', '', 
    'quant\n param transaxx', '', 
    'transaxx\n param transaxx', ''
]
adv_acc = [0.1571, 0, 0.1572, 0, 0.1557, 0, 0.0000, 0, 0.0000, 0, 0.0000, 0, 0.1114, 0, 0.1124, 0, 0.4769, 0]
reg_acc = [0.8590, 0, 0.8588, 0, 0.8570, 0, 0.8558, 0, 0.8560, 0, 0.8526, 0, 0.1121, 0, 0.1125, 0, 0.5130, 0]
# Positions
bar_width = 0.4
gap = 0.2  # Space between pairs
positions = np.arange(len(categories) // 2) * (2 * bar_width + gap)

# Adjust positions for the two bars in each pair
positions_1 = positions
positions_2 = positions + bar_width

# Plot
plt.figure(2, figsize=(12, 6))
plt.bar(positions_1, adv_acc[::2], width=bar_width, label='Adversarial Data', color='orange')
plt.bar(positions_2, reg_acc[::2], width=bar_width, label='Standard Data', color='#3455eb')

# Formatting
plt.xticks(positions + bar_width / 2, categories[::2], rotation=45, ha='right')  # Use midpoints and labels for each pair
plt.xlabel('Execution Type')
plt.ylabel('Test Accuracy')
plt.title('Adversarial Accuracy of Different Models with PGD (ε = 0.015) - Adversarial Data Generated by quant Model')
plt.legend()
plt.tight_layout()
plt.show(block=False)




## Adversarial Data Generated by transaxx Model
# Data
categories = [
    'float\n param float', '', 
    'quant\n param float', '', 
    'transaxx\n param float', '', 
    'float\n param quant', '', 
    'quant\n param quant', '', 
    'transaxx\n param quant', '', 
    'float\n param transaxx', '', 
    'quant\n param transaxx', '', 
    'transaxx\n param transaxx', ''
]
adv_acc = [0.7653, 0, 0.7627, 0, 0.7621, 0, 0.7701, 0, 0.7723, 0, 0.7704, 0, 0.1114, 0, 0.1126, 0, 0.1632, 0]
reg_acc = [0.8590, 0, 0.8588, 0, 0.8570, 0, 0.8558, 0, 0.8560, 0, 0.8526, 0, 0.1121, 0, 0.1125, 0, 0.5130, 0]
# Positions
bar_width = 0.4
gap = 0.2  # Space between pairs
positions = np.arange(len(categories) // 2) * (2 * bar_width + gap)

# Adjust positions for the two bars in each pair
positions_1 = positions
positions_2 = positions + bar_width

# Plot
plt.figure(3, figsize=(12, 6))
plt.bar(positions_1, adv_acc[::2], width=bar_width, label='Adversarial Data', color='orange')
plt.bar(positions_2, reg_acc[::2], width=bar_width, label='Standard Data', color='#3455eb')

# Formatting
plt.xticks(positions + bar_width / 2, categories[::2], rotation=45, ha='right')  # Use midpoints and labels for each pair
plt.xlabel('Execution Type')
plt.ylabel('Test Accuracy')
plt.title('Adversarial Accuracy of Different Models with PGD (ε = 0.015) - Adversarial Data Generated by transaxx Model')
plt.legend()
plt.tight_layout()
plt.show(block=True)
